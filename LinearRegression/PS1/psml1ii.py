# -*- coding: utf-8 -*-
"""PSML1ii.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lwm_mHzx7kJwe0h3ZYQJyNO-nd1gXk10
"""

import numpy as np
import matplotlib.pyplot as plt
from numpy import cov
from scipy.stats import pearsonr
import statistics

def coeff(x, y):
  n = len(x)
  m_x = np.mean(x)
  m_y = np.mean(y)

  SS_xy = np.sum(y*x) - n*m_y*m_x
  SS_xx = np.sum(np.sum(x*x) - n*m_x*m_x)

  b_1 = SS_xy / SS_xx
  b_0 = m_y - b_1*m_x

  return b_1, b_0

temp = [14.2, 16.4, 11.9, 15.2, 18.5, 22.1, 19.4, 25.1, 23.4, 18.1, 22.6, 17.2]
sales = [215, 325, 185, 332, 406, 522, 412, 614, 544, 421, 445, 408]
temp = np.array(temp)
sales = np.array(sales)
plt.scatter(temp, sales)

b1, b0 = coeff(temp, sales)
print("Slope, Intercept : " ,b1, b0)
y_hat = [round(i*b1 + b0, 2) for i in temp]
y_hat = np.array(y_hat)
plt.scatter(temp, sales)
plt.plot(temp, y_hat, color = 'r')
plt.xlabel = "Temperature"
plt.ylabel = "Sales"
#interpolation for 21
y21_hat = b1*21+b0
plt.scatter(21, y21_hat, color = 'black')

#predicting outside the range
y30_hat = b1*30+b0
plt.scatter(30, y30_hat, color = 'black')

plt.show()

#interpolation for 21

y21_hat = b1*21+b0